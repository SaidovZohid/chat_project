variables:
  IMAGE_NAME: samandarali777/tg_chat_service
  IMAGE_TAG: latest

stages:
  - build
  - migrate
  - deploy

build-image:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  only:
    - main

migrate:
  image: alpine
  stage: migrate
  before_script:
    - apk add wget && wget https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz
    - tar -xvf migrate.linux-amd64.tar.gz && mv migrate.linux-amd64 migrate && chmod +x migrate
  script:
    - ./migrate -path migrations -database "$CHAT_SERVICE_DATABASE_URL" up
  only:
    - main
    
deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY ubuntu@3.75.239.91 "
        docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
        docker pull $IMAGE_NAME:$IMAGE_TAG &&
        cd tg_devops && 
        make up " 
  only:
    - main
